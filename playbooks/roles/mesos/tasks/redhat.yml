---
  # Check if Mesosphere repo is already present
  # Bug with yum module for Ansible, fails if present
  - name: Check for Mesosphere repo
    stat: path=/etc/yum.repos.d/mesosphere.repo
    register: epel_check
    tags: mesos

  # Add Mesosphere repo if not existing
  - name: Add Mesosphere repo
    yum: name={{ mesosphere_yum_repo }} state=present
    when: epel_check.stat.exists == false
    tags: mesos

  # Install useful os packages
  - name: Install useful system tools
    yum:
      name: "{{ item }}"
      state: present
    with_items:
      - wget
      - curl
      - git
      - tar
      - libselinux-python
      - mesos-{{ mesos_version }}
    tags: mesos

  # Create Mesos work directory for replicated logs
  - name: Create Mesos work directory
    file: path={{ mesos_work_dir }} state=directory
    tags: mesos

  - name: Remove existing Mesos configuration
    file: path={{item}} state=absent
    with_items:
      - "/etc/mesos/"
      - "/etc/mesos/zk"
      - "/etc/mesos-master/"
      - "/etc/mesos-slave/"
      - "/etc/default/mesos-slave"
      - "/etc/default/mesos-master"
    tags: mesos

  # Create neccessary directory
  - name: Create default Mesos Master config directory
    file: path=/etc/mesos-master state=directory mode=0755

  - name: Create default Mesos Slave config directory
    file: path=/etc/mesos-slave state=directory mode=0755

  # Add new Mesos configuration files
  - name: Add Mesos default config file
    template: src=conf-mesos.j2 dest=/etc/default/mesos
    notify:
      - Restart mesos-master
    when: mesos_install_mode == "master" or mesos_install_mode == "master-slave"
    tags: mesos

  # Add new Mesos configuration files
  - name: Add Mesos default config file
    template: src=conf-mesos.j2 dest=/etc/default/mesos
    notify:
      - Restart mesos-slave
    when: mesos_install_mode == "slave" or mesos_install_mode == "master-slave"
    tags: mesos

  - name:  Add Mesos Master config files
    template: src={{item.src}} dest={{item.dest}}
    with_items:
      - { src: 'conf-mesos-master-quorum.j2', dest: '/etc/mesos-master/quorum' }
      - { src: 'conf-mesos-master-work_dir.j2', dest: '/etc/mesos-master/work_dir' }
      - { src: 'conf-mesos-master-port.j2', dest: '/etc/mesos-master/port' }
    when: mesos_install_mode == "master" or mesos_install_mode == "master-slave"
    notify:
      - Restart mesos-master
    tags: mesos

  - name: Add Mesos Slave config files
    template: src={{item.src}} dest={{item.dest}}
    with_items:
      - { src: 'conf-mesos-slave-master.j2', dest: '/etc/mesos-slave/master'}
      - { src: 'conf-mesos-slave-containerizers.j2', dest: '/etc/mesos-slave/containerizers'}
      - { src: 'conf-mesos-slave-executor_registration_timeout.j2', dest: '/etc/mesos-slave/executor_registration_timeout'}
      - { src: 'conf-mesos-slave-work_dir.j2', dest: '/etc/mesos-slave/work_dir'}
    when: mesos_install_mode == "master" or mesos_install_mode == "slave" or mesos_install_mode == "master-slave"
    notify:
      - Restart mesos-slave
    tags: mesos

  - name: Systemd check
    stat: path=/usr/lib/systemd/system/
    register: systemd_check
    tags: mesos

  - name: Add Mesos Master systemd script
    template: src=mesos-master.service.j2 dest=/usr/lib/systemd/system/mesos-master.service
    when: (mesos_install_mode == "master" or mesos_install_mode == "master-slave") and systemd_check.stat.exists == true
    notify:
      - Reload daemon
      - Restart mesos-master
    tags: mesos

  - name: Add Mesos Slave systemd script
    template: src=mesos-slave.service.j2 dest=/usr/lib/systemd/system/mesos-slave.service
    when: (mesos_install_mode == "master" or mesos_install_mode == "slave" or mesos_install_mode == "master-slave") and systemd_check.stat.exists == true
    notify:
      - Reload daemon
      - Restart mesos-slave
    tags: mesos
