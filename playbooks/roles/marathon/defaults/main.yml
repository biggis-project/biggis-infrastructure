---
marathon_version: "1.1.2"

os_version: "{{ ansible_lsb.release if ansible_lsb is defined else ansible_distribution_version }}"
os_version_major: "{{ os_version | regex_replace('^([0-9]+)[^0-9]*.*', '\\\\1') }}"

mesosphere_releases:
  '6': 'mesosphere-el-repo-6-3.noarch.rpm'
  '7': 'mesosphere-el-repo-7-2.noarch.rpm'

# Debian: Mesosphere apt repository URL
marathon_apt_package: "marathon={{ marathon_version }}-1.*"
marathon_apt_repo: "deb http://repos.mesosphere.com/{{ansible_distribution|lower}} {{ansible_distribution_release|lower}} main"

# RedHat: Mesosphere yum repository URL
marathon_yum_package: "marathon-{{ marathon_version }}"
mesosphere_yum_repo: "http://repos.mesosphere.com/el/{{ os_version_major }}/noarch/RPMS/{{ mesosphere_releases[os_version_major] }}"

marathon_url: "http://downloads.mesosphere.com/marathon/v{{ marathon_version }}-RC1/marathon-{{ marathon_version }}-RC1.tgz"

marathon_hostname: "{{ inventory_hostname }}"
marathon_http_port: "8080"
marathon_env_java_opts: '-Xmx512m'
marathon_env_vars:
  - "JAVA_OPTS={{ marathon_env_java_opts }}"

# command line flags:
# https://mesosphere.github.io/marathon/docs/command-line-flags.html
# Marathon reads files under /etc/marathon/conf and adds them to CLI
zookeeper_hostnames: "localhost:2181"
zookeeper_client_port: "2181"
mesos_zookeeper_path: "/mesos"
marathon_zookeeper_path: "/marathon"
mesos_zookeeper_masters: "zk://{{ zookeeper_hostnames }}{{ mesos_zookeeper_path }}"
marathon_zookeeper_state: "zk://{{ zookeeper_hostnames }}{{ marathon_zookeeper_path }}"
haproxy_script_location: "" # "/usr/local/bin"
marathon_dir: /opt/marathon-{{ marathon_version }}

# optional
artifact_store: ""
checkpoint: "true"
marathon_mesos_role: ""

marathon_additional_configs: []
#    For example:
#    - name: task_lost_expunge_interval
#      value: 900000
